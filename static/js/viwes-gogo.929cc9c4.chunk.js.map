{"version":3,"sources":["components/base64toimg/ImageB64.jsx","views/app/gogo/index.js","views/app/generarqr/index.js","views/app/cobranza/index.js","assets/img/verificado/verificado.png","views/app/verqr/Verificado.js","views/app/verqr/index.js"],"names":["ImageB64","base64String","isDisable","useState","imageUrl","setImageUrl","useEffect","decodedImage","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","blobUrl","URL","createObjectURL","revokeObjectURL","className","src","alt","Start","React","lazy","Gogo","match","fallback","exact","from","url","to","path","render","props","Genera","Generar","CobranzaPage","Cobranza","Verificado","verificadoImg","style","height","width","connect","qrReducer","miqr","erro","setIsDisable","descargar","blobURLPublic","a","fetch","imagen","imgblob","imgURL","link","document","createElement","href","download","body","appendChild","click","removeChild","handleVerificar","getCurrentUser","title","data","qrId","id","codBank","user","verificarQR","codError","console","log","Row","xxs","IntlMessages","border","undefined","qr","Button","onClick","disabled"],"mappings":"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","file":"static/js/viwes-gogo.929cc9c4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ImageB64 = ({ base64String, isDisable }) => {\r\n  const [imageUrl, setImageUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Decodificar la cadena Base64\r\n    const decodedImage = atob(base64String);\r\n\r\n    // Crear un array de bytes\r\n    const byteNumbers = new Array(decodedImage.length);\r\n    for (let i = 0; i < decodedImage.length; i++) {\r\n      byteNumbers[i] = decodedImage.charCodeAt(i);\r\n    }\r\n    const byteArray = new Uint8Array(byteNumbers);\r\n\r\n    // Crear un blob a partir del array de bytes\r\n    const blob = new Blob([byteArray], { type: 'image/jpeg' });\r\n\r\n    // Crear una URL de objeto (blob)\r\n    const blobUrl = URL.createObjectURL(blob);\r\n\r\n    setImageUrl(blobUrl);\r\n\r\n    // Limpiar la URL de objeto cuando el componente se desmonta\r\n    return () => URL.revokeObjectURL(blobUrl);\r\n  }, [base64String]);\r\n\r\n  return (\r\n    <div className= {isDisable ? 'd-none' : ''}>\r\n      {imageUrl ? (\r\n        // <img src={imageUrl} alt=\"Imagen\" width={500} height={500}/>\r\n        <img src={imageUrl} alt=\"Imagen\"/>\r\n      ) : (\r\n        <p>Generando QR...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageB64;","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nconst Start = React.lazy(() =>\r\n  import(/* webpackChunkName: \"start\" */ './start')\r\n);\r\nconst Gogo = ({ match }) => (\r\n  <Suspense fallback={<div className=\"loading\" />}>\r\n    <Switch>\r\n      <Redirect exact from={`${match.url}/`} to={`${match.url}/start`} />\r\n      <Route\r\n        path={`${match.url}/start`}\r\n        render={(props) => <Start {...props} />}\r\n      />\r\n      <Redirect to=\"/error\" />\r\n    </Switch>\r\n  </Suspense>\r\n);\r\nexport default Gogo;\r\n","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nconst Genera = React.lazy(() =>\r\n  import(/* webpackChunkName: \"generar-qr\" */ './generar-qr')\r\n);\r\nconst Generar = ({ match }) => (\r\n  <Suspense fallback={<div className=\"loading\" />}>\r\n    <Switch>\r\n      <Redirect exact from={`${match.url}/`} to={`${match.url}/generarqr`} />\r\n      <Route\r\n        path={`${match.url}/generarqr`}\r\n        render={(props) => <Genera {...props} />}\r\n      />\r\n      <Redirect to=\"/error\" />\r\n    </Switch>\r\n  </Suspense>\r\n);\r\nexport default Generar;","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n// import CobranzaPage from './cobranzaPage';\r\n\r\nconst CobranzaPage = React.lazy(() =>\r\n  import(/* webpackChunkName: \"start\" */ './cobranzaPage')\r\n);\r\nconst Cobranza = ({ match }) => (\r\n  <Suspense fallback={<div className=\"loading\" />}>\r\n    <Switch>\r\n      <Redirect exact from={`${match.url}/`} to={`${match.url}/cobranza`} />\r\n      <Route\r\n        path={`${match.url}/cobranza`}\r\n        render={(props) => <CobranzaPage {...props} />}\r\n      />\r\n      <Redirect to=\"/error\" />\r\n    </Switch>\r\n  </Suspense>\r\n);\r\nexport default Cobranza;","export default __webpack_public_path__ + \"static/media/verificado.214a9093.png\";","import React from 'react'\r\nimport './verificado.css'\r\nimport verificadoImg from 'assets/img/verificado/verificado.png'\r\n\r\nfunction Verificado() {\r\n  return (\r\n    <div className=\"tarjeta\">\r\n        <span className=\"ribbon-1\"/>\r\n        <div className=\"flexbox\">            \r\n            <img src={ verificadoImg } alt=\"verify\" style={{ height: '12rem', width: \"13rem\" }} />\r\n        </div>        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Verificado","import React, { useState } from 'react';\r\nimport { \r\n  Button, \r\n  Row,\r\n  // Card,\r\n  // CardBody,\r\n  // CardTitle,\r\n  // Modal,\r\n  // ModalHeader,\r\n  // ModalBody,\r\n  // ModalFooter,\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from 'helpers/IntlMessages';\r\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\r\n// import Breadcrumb from 'containers/navs/Breadcrumb';\r\nimport ImageB64 from 'components/base64toimg/ImageB64';\r\nimport { connect } from 'react-redux';\r\n// import verificadoImg from 'assets/img/verificado/verificado.png'\r\n// import ImageB64 from 'components/base64toimg/ImageB64'\r\nimport { verificarQR } from 'api/auth';\r\nimport { getCurrentUser } from 'helpers/Utils';\r\nimport Verificado from './Verificado'\r\nimport './index.css'\r\n// import data from 'data/notifications';\r\n\r\nconst VerQRPage = ({ miqr }) => {\r\n\r\n  // const [modalBasic, setModalBasic] = useState(false);\r\n  const [isDisable, setIsDisable] = useState(false);\r\n\r\n  // const [isVerificado, setIsverificado] = useState(false);\r\n\r\n /*  const handleVerificado = () => {\r\n    setIsverificado(!isVerificado)\r\n  } */\r\n\r\n  const descargar = async (blobURLPublic) => {\r\n    const imagen = await fetch(blobURLPublic)\r\n    const imgblob = await imagen.blob()\r\n    const imgURL = URL.createObjectURL(imgblob)\r\n    const link = document.createElement('a')\r\n    link.href = imgURL\r\n    link.download = \"imgen qr.png\"\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  const handleVerificar = async() => {    \r\n    try {\r\n      const { title } = getCurrentUser();\r\n      const data = {\r\n        qrId: miqr.id, \r\n        codBank: \"1\", \r\n        user:  title\r\n      }\r\n\r\n      const resultado = await verificarQR(data);\r\n      if (resultado.data.codError === \"0\"){\r\n        // console.log(resultado.data)\r\n        // setModalBasic(true);\r\n        setIsDisable(!isDisable)\r\n      }      \r\n    } catch (error) {\r\n      console.log(\"error al verificar el QR\")\r\n    }\r\n  }\r\n\r\n  const handleGuardarQR = () => {\r\n    let blobURLPublic = '';\r\n    const decodedImage = atob(miqr.qr);\r\n\r\n    // Crear un array de bytes\r\n    const byteNumbers = new Array(decodedImage.length);\r\n    for (let i = 0; i < decodedImage.length; i++) {\r\n      byteNumbers[i] = decodedImage.charCodeAt(i);\r\n    }\r\n    const byteArray = new Uint8Array(byteNumbers);\r\n\r\n    // Crear un blob a partir del array de bytes\r\n    const blob = new Blob([byteArray], { type: 'image/jpeg' });\r\n\r\n    // Crear una URL de objeto (blob)\r\n    const blobUrl = URL.createObjectURL(blob);\r\n\r\n    blobURLPublic = blobUrl\r\n\r\n    descargar(blobURLPublic);\r\n\r\n    // setImageUrl(blobUrl);\r\n\r\n    // Limpiar la URL de objeto cuando el componente se desmonta\r\n    return () => URL.revokeObjectURL(blobUrl);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          {/* <Breadcrumb heading=\"ver qr\" match={match} /> */}\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mb-4\">\r\n          <p>\r\n            <IntlMessages id=\"menu.verqr\" />\r\n          </p>\r\n\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"p-5 rounded-2 text-secondary\" style={{ width: '35rem', border: '1 px solid #EE7A19'}}>\r\n            <div className=\"d-flex justify-content-center\">\r\n                { isDisable ? \r\n                (                  \r\n                  <Verificado/>\r\n                ) :\r\n                 undefined}\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                { miqr ? (<ImageB64 base64String = {miqr.qr} isDisable = {isDisable}/>) : <h3>debes generar un nuevo QR ...</h3>}\r\n              </div>\r\n\r\n              {/* imprimir ? (<PDFViewer style={{width: \"100%\", height: \"90vh\"}}> <ImprimirPDFPage/> </PDFViewer>) : <h1>cargando ...</h1> */} \r\n              {/* {imprimir ? (<h1> vas a imprimir algo </h1>) : <h1>cargando ...</h1>} */}\r\n\r\n              {/* <div className=\"flex gap-x-2 w-full justify-between\">   */}                  \r\n              <div className=\"d-flex justify-content-around mt-4 movil\">                    \r\n                  <Button className='text-white px-4 py-2 my-2 movil-item' onClick={ handleGuardarQR }>Guardar</Button>\r\n                  <Button className='text-white px-4 py-2 my-2 movil-item'>Imprimir</Button>\r\n                  \r\n                  <NavLink to=\"/app/generarqr/generarqr movil-item\">\r\n                      <Button className='text-white px-4 py-2 my-2 movil-item-button'>Nuevo QR</Button>\r\n                  </NavLink>                \r\n                  {/* <Button className='bg-orange-400 text-white px-4 py-2 rounded-md my-2' onClick={handleVerificado}>Verificar</Button> */}\r\n                  <Button className='text-white px-4 py-2 my-2 movil-item' onClick={handleVerificar} disabled={isDisable}>Verificar</Button>\r\n                                 \r\n              </div>\r\n            </div>\r\n          </div> \r\n\r\n          {/* { isVerificado ? (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <img src={ verificadoImg } alt=\"verify\" style={{ height: '14rem', width: \"15rem\" }} />\r\n            </div>\r\n          ) :  \r\n            undefined\r\n          }   */}  \r\n\r\n          {/* <Card className=\"mb-4\">\r\n            <CardBody>\r\n              \r\n              <div>\r\n                <Modal\r\n                  isOpen={modalBasic}\r\n                  toggle={() => setModalBasic(!modalBasic)}\r\n                >\r\n                  <ModalHeader>\r\n                    Verificado\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img src={ verificadoImg } alt=\"verify\" style={{ height: '14rem', width: \"15rem\" }} />\r\n                    </div>                 \r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => setModalBasic(false)}\r\n                    >\r\n                      Aceptar\r\n                    </Button>{' '}                    \r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n            </CardBody>\r\n          </Card> */}\r\n\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\n// export default VerQRPage;\r\n\r\nconst mapStateToProps = ({ qrReducer }) => {\r\n  const { miqr, erro } = qrReducer;\r\n  return { miqr, erro };\r\n};\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(VerQRPage);"],"sourceRoot":""}